def check_if_policy(arcade_name: str, component_name: str):
def check_if_sg(sg_name: str) -> str:
def create_grv_sg(sg_name: str, vpc_id: str) -> str:
def create_policy(policy_name, policy_document):
def create_role(role_name: str, policy_arns: list, assume_policy, custom_policy=None) -> str:
def delete_grv_sg(sg_name: str):
def delete_iam_policy(ARN: str) -> bool:
def delete_role(role_name: str) -> str:
def find_grv_subnets(gravitar: str, prefix: str = "core") -> list:
def find_grv_tag(session: boto3.session.Session, arcade_name: str,
def find_iam_arn(arcade_name: str, component_name: str) -> str:
def find_role(role_name: str) -> dict:
def find_vpc_name(vpc_id: str) -> str:
def get_gravitar_info(gravitar: str) -> dict:
def get_grv_buckets(gravitar: str) -> dict:
def get_vpc_az(vpc_id: str, subnet_ids: list) -> list:
def get_vpc_cidr(vpc_id: str) -> str:
def get_vpc_id(grv_name: str) -> str:
def update_grv_tag(session: boto3.session.Session, arcade_name: str,
